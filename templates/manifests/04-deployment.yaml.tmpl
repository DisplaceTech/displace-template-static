apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.ProjectName}}
  namespace: {{.Namespace}}
  labels:
    app: {{.ProjectName}}
    displace.tech/project: {{.ProjectName}}
spec:
  replicas: {{ .Replicas | default 2 }}
  selector:
    matchLabels:
      app: {{.ProjectName}}
  template:
    metadata:
      labels:
        app: {{.ProjectName}}
        displace.tech/project: {{.ProjectName}}
    spec:
      initContainers:
      - name: content-init
        image: {{.ProjectName}}:{{ .ImageTag | default "latest" }}
        command: ["/bin/sh", "-c"]
        args:
        - |
          if [ ! -f /srv/index.html ]; then
            echo "Copying initial content..."
            cp -r /app/dist/* /srv/
          else
            echo "Content already exists, skipping initialization"
          fi
        volumeMounts:
        - name: content-storage
          mountPath: /srv
      containers:
      - name: caddy
        image: caddy:2.8-alpine
        ports:
        - containerPort: 80
          name: http
        - containerPort: 2019
          name: admin
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: caddy-config
          mountPath: /etc/caddy
          readOnly: true
        - name: content-storage
          mountPath: /srv
          readOnly: true
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: caddy-config
        configMap:
          name: {{.ProjectName}}-caddy-config
      - name: content-storage
        persistentVolumeClaim:
          claimName: {{.ProjectName}}-content
